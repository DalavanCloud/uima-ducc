scheduling.class_set    = background low normal high urgent weekly fixed reserve JobDriver debug
scheduling.default.name = normal
scheduling.default.name.reserve = fixed

#
# class to use when debug or all-in-one is specified
# and .debug is absent from fair_share class
#
scheduling.default.name.debug = debug

#
# The first five classes are blade-like unfair share
#
scheduling.class.background.policy       = FAIR_SHARE
scheduling.class.background.share_weight = 1
scheduling.class.background.priority     = 10
scheduling.class.background.cap          = 0
scheduling.class.background.debug        = debug

scheduling.class.low.policy              = FAIR_SHARE
scheduling.class.low.share_weight        = 50
scheduling.class.low.priority            = 10
scheduling.class.low.cap                 = 0

scheduling.class.normal.policy           = FAIR_SHARE
scheduling.class.normal.share_weight     = 100
scheduling.class.normal.priority         = 10
scheduling.class.normal.cap              = 0

# Note that it is possible to override some of the the global scheduling parameters
# on a class-wise basis
scheduling.class.normal.prediction       = true
scheduling.class.normal.prediction.fudge = 10000
scheduling.class.normal.expand.by.doubling = true
scheduling.class.normal.initialization.cap = 2

scheduling.class.high.policy         = FAIR_SHARE
scheduling.class.high.share_weight   = 200
scheduling.class.high.priority       = 10
scheduling.class.high.cap            = 0

scheduling.class.urgent.policy       = FAIR_SHARE
scheduling.class.urgent.share_weight = 10000
scheduling.class.urgent.priority     = 10
scheduling.class.urgent.cap          = 0

#
# Some number of fixed share aka pinned shares 
#
scheduling.class.fixed.policy                = FIXED_SHARE
scheduling.class.fixed.priority              = 5
scheduling.class.fixed.max_shares            = 10    #max per user
#scheduling.class.fixed.cap                   = 20%

#
# This is for weekly.  It will eat the system if there's enough work for it but
# relinquish resources as things complete.  So we cap it at 80% to allow some bits of
# work to trickle through
#
scheduling.class.weekly.policy           = FAIR_SHARE
scheduling.class.weekly.share_weight     = 100
scheduling.class.weekly.priority         = 3
scheduling.class.weekly.cap              = 80%

#
# Reservations - 
# 
scheduling.class.reserve.policy                = RESERVE
scheduling.class.reserve.priority              = 1
scheduling.class.reserve.cap                   = 0
scheduling.class.reserve.enforce.memory        = false
scheduling.class.reserve.max_machines          = 10

#
# Job driver, always going to succeed
# 
scheduling.class.JobDriver.policy                = FIXED_SHARE
scheduling.class.JobDriver.priority              = 0
scheduling.class.JobDriver.cap                   = 0
scheduling.class.JobDriver.enforce.memory        = false
scheduling.class.JobDriver.max_machines     	 = 5

#
# used for debug and all-in-one
#

scheduling.class.debug.policy       = FIXED_SHARE
scheduling.class.debug.share_weight = 1
scheduling.class.debug.priority     = 9
scheduling.class.debug.cap          = 0
scheduling.class.debug.debug        = irrelevant

