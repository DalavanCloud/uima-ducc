<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
   <!-- ************************************ stop_ducc ********************************** -->
  <section>
    <title>stop_ducc</title>

    <para>
      <emphasis>The source for this chapter is ducc_ducbook/documents/admin/stop-ducc.xml</emphasis>
    </para>

    <para>
      <emphasis>Description:</emphasis>
      <variablelist>
        <varlistentry>
          <term  />
          <listitem>

            <para>
              Stop_ducc is used to stop DUCC processes.  If run with no parameters it takes the following
              actions the help text is printed to the console.
            </para>
            
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
    
    <para>
      <emphasis>Usage:</emphasis>
      <variablelist>
        <varlistentry>
          <term  />
          <listitem>

            <para>
              <emphasis role="bold"> ducc_stop [options]</emphasis>
            </para>
            <para>
              If no options are given, help text is presented.  At least one option is required, to avoid
              accidental cluster shutdown.
            </para>

          </listitem>
        </varlistentry>
      </variablelist>
    </para>

    <para>
      <emphasis>Options:</emphasis>
      <variablelist>

        <varlistentry>
          <term />
          <listitem>
            <para>
              <emphasis role="bold">-a --all</emphasis>
              <variablelist>
                <varlistentry>
                  <term  />
                  <listitem>
                    <para>
                      Stop all the DUCC processes, including agents and management processes.  This broadcasts
                      a "shutdown" command to all DUCC processes.  Shutdown is normally performed gracefully
                      will all process including job processes given time to save state.
                      All user processes, both jobs and services, are sent shutdown signals. Job and service processes which do not
                      shutdown within a designated grace period are then forcibly terminated with
                      <emphasis>kill -9.</emphasis>
                    </para>
                    
                    <para>
                      <screen>stop_ducc -a</screen>
                    </para>
                    
                  </listitem>
                </varlistentry>
              </variablelist>
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>          
          <term  />
          <listitem>
            <para>
              <emphasis role="bold">-n, --nodelist [nodefile]</emphasis>
              <variablelist>
                <varlistentry>
                  <term  />
                  <listitem>
                    <para>
                      Only the DUCC agents in the designated nodelists are shutdown.  The processes
                      are sent <emphasis>kill -INT</emphasis> signals which triggers the Java shutdown
                      hooks and enables graceful shutdown. All user processes on the indicated nodes,
                      both jobs and services, are sent "shutdown" signals and are given a minute to
                      shutdown gracefully.  Job and service processes which do not shutdown within a
                      designated grace period are then forcibly terminated with
                      <emphasis>kill -9.</emphasis> 
                  </para>
                    
                    <para>
                      <screen>stop_ducc -n foo.nodes -n bar.nodes -n baz.nodes</screen>
                    </para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term  />
          <listitem>
            <para>
              <emphasis role="bold">-m, --management</emphasis>
              <variablelist>
                <varlistentry>
                  <term  />
                  <listitem>
                    <para>
                      Stop only the management processes <emphasis>rm, pm, or, sm, and ws.</emphasis> All
                      agents are left running; all job drivers are left running, all job processes are
                      left running.
                    </para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term  />
          <listitem>
            <para>
              <emphasis role="bold">-c, --component [component]</emphasis>
              <variablelist>
                <varlistentry>
                  <term  />
                  <listitem>
                    <para>
                      Stop a specific DUCC component.
                    </para>
                    <para>
                      This may be used to stop an errant management component and subsequently 
                      restart it (with <emphasis>start_ducc</emphasis>).
                    </para>
                    <para>
                      This may also be used to stop a specific agent and the job and services processes
                      it is managing, without the need to specify a nodelist.
                    </para>

                    <para>
                      Stop agents on nodes n1 and n2:
                      <screen>stop_ducc -c agent@n1 -c agent@n2</screen>
                    </para>

                    <para>
                      Stop and restart the rm:
                      <screen>stop_ducc -c rm</screen>
                      <screen>start_ducc -c rmc</screen>
                    </para>

                    <para>
                      Components include:
                      <variablelist>                      
                        <varlistentry>
                          <term> <emphasis role="bold">rm</emphasis></term>
                          <listitem>
                            <para>
                              The Resource Manager.
                            </para>
                          </listitem>
                        </varlistentry>
                        <varlistentry>
                          <term> <emphasis role="bold">or</emphasis></term>
                          <listitem>
                            <para>
                              The Orchestrator.
                            </para>
                          </listitem>
                        </varlistentry>
                        <varlistentry>
                          <term> <emphasis role="bold">pm</emphasis></term>
                          <listitem>
                            <para>
                              The Process Manager.
                            </para>
                          </listitem>
                        </varlistentry>

                        <varlistentry>
                          <term> <emphasis role="bold">sm</emphasis></term>
                          <listitem>
                            <para>
                              The Service Manager.
                            </para>
                          </listitem>
                        </varlistentry>

                        <varlistentry>
                          <term> <emphasis role="bold">ws</emphasis></term>
                          <listitem>
                            <para>
                              The Web Server.
                            </para>
                          </listitem>
                        </varlistentry>

                        <varlistentry>
                          <term> <emphasis role="bold">agent</emphasis></term>
                          <listitem>
                            <para>
                              Node Agents.
                            </para>
                          </listitem>
                        </varlistentry>

                      </variablelist>
                    </para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term  />
          <listitem>
            <para>
              <emphasis role="bold">-k, --kill</emphasis>
              <variablelist>
                <varlistentry>
                  <term  />
                  <listitem>
                    <para>
                      Use this to forcibly kill a component using <emphasis>kill -9</emphasis>.  This
                      should only be used if the <emphasis>-a</emphasis> option does not work.  This 
                      normally has the same effect as <emphasis>check_ducc -k</emphasis>, with the
                      difference that <emphasis>check_ducc</emphasis> indiscriminately kills all
                      the DUCC processes it can find, whereas <emphasis>stop_ducc-k </emphasis>
                      can be directed to a specific instance of a component.
                    </para>
                    
                  </listitem>
                </varlistentry>
              </variablelist>
            </para>
          </listitem>
        </varlistentry>

      </variablelist>

    </para>

  </section>
