<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
  <!-- ************************************ check_ducc ********************************** -->

  <section>
    <title>check_ducc</title>

    <para>
      <emphasis>The source for this chapter is ducc_ducbook/documents/admin/check-ducc.xml</emphasis>
    </para>

    <para>
      <emphasis>Description:</emphasis>
      <variablelist>
        <varlistentry>
          <term  />
          <listitem>

            <para>
              <emphasis>Check_ducc</emphasis> is used to find and report on DUCC processes.  It can be
              used to find processes owned by ducc (management processes, agents, and job processes), or
              ducc jobs owned by users.
            </para>
            
            <para>
              <emphasis>Check_ducc</emphasis> can also be used to clean up errant DUCC processes when
              <emphasis>stop_ducc</emphasis> is unable to do so.  The difference is that
              <emphasis>stop_ducc</emphasis> generally tries more gracefully stop
              processes.  <emphasis>check_ducc</emphasis> is used as a last resort, or if a fast but
              graceless shutdown is desired.
            </para>

          </listitem>
        </varlistentry>
      </variablelist>
    </para>
    
    <para>
      <emphasis>Usage:</emphasis>
      <variablelist>
        <varlistentry>
          <term  />
          <listitem>
            <para>
              <emphasis role="bold">check_ducc [options]</emphasis>
            </para>
            
            <variablelist>
              <varlistentry>
                <term  />
                <listitem>
                  <para>
                    If no options are given this is the equivalent of:
                    <screen>check_ducc -n ../resources/ducc.nodes</screen>  This searches
                    for all the processes owned by user <emphasis>ducc</emphasis> on all
                    the nodes in ducc.nodes.  User processes are not searched for.
                  </para>
                </listitem>
              </varlistentry>
            </variablelist>

          </listitem>
        </varlistentry>
      </variablelist>
    </para>

    <para>
      <emphasis>Options:</emphasis>
      <variablelist>

        <varlistentry>
          <term  />
          <listitem>
            <para>
              <emphasis role="bold">-n --nodelist [nodefile]</emphasis>
            </para>

            <variablelist>
              <varlistentry>
                <term  />
                <listitem>
                  <para>
                    Only the nodes specified in the nodefile are searched.  The option may be
                    specified multiple times for multiple nodefiles.  Note that the "local" node
                    is always checked as well.
                  </para>

                  <para>
                    <screen>check_ducc -n nlist1 -n nlist2 </screen>
                  </para>

                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term  />
          <listitem>
            <para>
              <emphasis role="bold">-u --user [userid]</emphasis>
            </para>
            <variablelist>
              <varlistentry>
                <term  />
                <listitem>
                  <para>
                    The userid specifies the user whose processes check_ducc searches for.  If not specified,
                    the user executing check_ducc is used.  If the user is specified as 'all' then all ducc processes
                    belonging to all users are searched for.
                  </para>

                  <para>
                    <screen>check_ducc -u billy</screen>
                  </para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term  />
          <listitem>
            <para>
              <emphasis role="bold">-p --pids</emphasis>
            </para>

            <variablelist>
              <varlistentry>
                <term  />
                <listitem>
                  <para>
                    Rewrite the PID file.  The PID file contains the process ids of all known DUCC
                    management and agent processes.  The PID file is normally managed
                    by <emphasis>start_ducc</emphasis> and <emphasis>stop_ducc</emphasis> and is
                    stored in <filename>ducc_runtime/state/ducc.pids</filename>.
                  </para>

                  <para>
                    Occasionally the PID file can become partially or fully corrupted; for example,
                    if a DUCC process dies spontaneously.  Use <emphasis>check_ducc -p</emphasis> to
                    search the cluster for processes and refresh the PID file.
                  </para>

                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>


        <varlistentry>
          <term  />
          <listitem>
            <para>
              <emphasis role="bold">-r --reap</emphasis>
            </para>

            <variablelist>
              <varlistentry>
                <term  />
                <listitem>
                  <para>
                    Reap user processes.  This uses kill -9 and ducc_ling to forcibly terminate
                    user processes.  Only processes specified by '-u' or '--userid' are targeted.  If
                    the user "all" is specified, then all user processes are terminated.
                    The intent of this is to easily find and terminate "rogue" user processes
                    that do not terminate.
                  </para>

                  <para>
                    Use this option with care.  It does not distinguish user processes by specific
                    job id.  Every process started by DUCC owned by the designated user is killed.
                  </para>

                  <para>
                    <screen>check_ducc -u billy -u bobby -r</screen>
                  </para>

                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

      </variablelist>

    </para>

  </section>
